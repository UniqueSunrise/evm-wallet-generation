import sys

import questionary
from questionary import Choice

from networks import Networks
from client import Client


def create_wallet(amount, param):
    for _ in range(amount):
        client = Client(network=Networks.Arbitrum)

        with open('success_wallets.txt', 'a') as f:
            if param == 1:
                f.write(f'{client.account.key.hex()}\n')
            elif param == 2:
                f.write(f'address - {client.account.address} | private key - {client.account.key.hex()}\n')

    print('–£—Å–ø–µ—à–Ω–æ!')


def get_module():

    result = questionary.select(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤",
        choices=[
            Choice("1) –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á", 1),
            Choice("2) –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏ –∞–¥—Ä–µ—Å", 2),
            Choice("3) –í—ã—Ö–æ–¥ / Exit", "exit"),
        ],
        qmark="üßê ",
        pointer="üê∏ "
    ).ask()
    if result == "exit":
        print("\n‚ù§Ô∏è–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n")
        sys.exit()
    return result


def main(param):
    amount = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—à–µ–ª—å–∫–æ–≤ - '))
    create_wallet(amount, param)


if __name__ == '__main__':
    module = get_module()
    main(module)
